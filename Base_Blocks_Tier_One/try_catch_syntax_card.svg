<svg viewBox="0 0 400 600" xmlns="http://www.w3.org/2000/svg">
  <!-- Card Background -->
  <rect width="380" height="580" x="10" y="10" rx="20" fill="#FFEBEE" stroke="#C62828" stroke-width="4"/>
  
  <!-- Header -->
  <rect x="25" y="25" width="350" height="60" rx="12" fill="#F44336"/>
  <text x="200" y="50" text-anchor="middle" fill="white" font-family="Arial" font-size="26" font-weight="bold">Try / Catch</text>
  <text x="200" y="72" text-anchor="middle" fill="white" font-family="Arial" font-size="14">The Error Handlers</text>
  
  <!-- Mana Cost -->
  <circle cx="340" cy="55" r="20" fill="#CDDC39" stroke="#827717" stroke-width="3"/>
  <text x="340" y="63" text-anchor="middle" font-size="18" font-weight="bold">2</text>
  
  <!-- Visual Illustration -->
  <g transform="translate(15, 110)">
    <text x="185" y="20" text-anchor="middle" font-size="16" fill="#C62828" font-weight="bold">Error Handling Across Languages</text>
    
    <!-- Python Try/Catch -->
    <g transform="translate(0, 40)">
      <rect x="0" y="0" width="180" height="80" fill="#FFE082" stroke="#F57F17" stroke-width="2" rx="5"/>
      <text x="90" y="15" text-anchor="middle" font-size="12" fill="#E65100" font-weight="bold">PYTHON</text>
      <text x="5" y="30" font-size="9" font-family="monospace" fill="#333">try:</text>
      <text x="15" y="43" font-size="9" font-family="monospace" fill="#333">result = 10 / 0</text>
      <text x="5" y="56" font-size="9" font-family="monospace" fill="#333">except ZeroDivisionError:</text>
      <text x="15" y="69" font-size="9" font-family="monospace" fill="#333">print("Cannot divide by zero")</text>
    </g>
    
    <!-- JavaScript Try/Catch -->
    <g transform="translate(190, 40)">
      <rect x="0" y="0" width="180" height="80" fill="#FFF9C4" stroke="#F9A825" stroke-width="2" rx="5"/>
      <text x="90" y="15" text-anchor="middle" font-size="12" fill="#E65100" font-weight="bold">JAVASCRIPT</text>
      <text x="5" y="30" font-size="9" font-family="monospace" fill="#333">try {</text>
      <text x="15" y="43" font-size="9" font-family="monospace" fill="#333">const result = riskyOperation();</text>
      <text x="5" y="56" font-size="9" font-family="monospace" fill="#333">} catch (error) {</text>
      <text x="15" y="69" font-size="9" font-family="monospace" fill="#333">console.error(error.message);</text>
      <text x="5" y="82" font-size="9" font-family="monospace" fill="#333">}</text>
    </g>
    
    <!-- TypeScript Try/Catch -->
    <g transform="translate(0, 140)">
      <rect x="0" y="0" width="180" height="80" fill="#E1F5FE" stroke="#0288D1" stroke-width="2" rx="5"/>
      <text x="90" y="15" text-anchor="middle" font-size="12" fill="#01579B" font-weight="bold">TYPESCRIPT</text>
      <text x="5" y="30" font-size="9" font-family="monospace" fill="#333">try {</text>
      <text x="15" y="43" font-size="9" font-family="monospace" fill="#333">const result: number = parse(data);</text>
      <text x="5" y="56" font-size="9" font-family="monospace" fill="#333">} catch (error: unknown) {</text>
      <text x="15" y="69" font-size="9" font-family="monospace" fill="#333">console.error(error);</text>
      <text x="5" y="82" font-size="9" font-family="monospace" fill="#333">}</text>
    </g>
    
    <!-- C# Try/Catch -->
    <g transform="translate(190, 140)">
      <rect x="0" y="0" width="180" height="80" fill="#F3E5F5" stroke="#7B1FA2" stroke-width="2" rx="5"/>
      <text x="90" y="15" text-anchor="middle" font-size="12" fill="#4A148C" font-weight="bold">C#</text>
      <text x="5" y="30" font-size="9" font-family="monospace" fill="#333">try</text>
      <text x="5" y="43" font-size="9" font-family="monospace" fill="#333">{</text>
      <text x="15" y="56" font-size="9" font-family="monospace" fill="#333">int result = int.Parse(input);</text>
      <text x="5" y="69" font-size="9" font-family="monospace" fill="#333">}</text>
      <text x="5" y="82" font-size="9" font-family="monospace" fill="#333">catch (FormatException ex)</text>
    </g>
    
    <!-- Finally Blocks -->
    <g transform="translate(0, 240)">
      <text x="185" y="0" text-anchor="middle" font-size="14" fill="#C62828" font-weight="bold">Finally Blocks (Cleanup)</text>
      
      <!-- Python Finally -->
      <g transform="translate(0, 20)">
        <rect x="0" y="0" width="180" height="60" fill="#FFE082" stroke="#F57F17" stroke-width="2" rx="5"/>
        <text x="90" y="15" text-anchor="middle" font-size="12" fill="#E65100" font-weight="bold">PYTHON</text>
        <text x="5" y="30" font-size="9" font-family="monospace" fill="#333">try:</text>
        <text x="15" y="43" font-size="9" font-family="monospace" fill="#333">file = open("data.txt")</text>
        <text x="5" y="56" font-size="9" font-family="monospace" fill="#333">finally:</text>
        <text x="15" y="69" font-size="9" font-family="monospace" fill="#333">file.close()</text>
      </g>
      
      <!-- JavaScript Finally -->
      <g transform="translate(190, 20)">
        <rect x="0" y="0" width="180" height="60" fill="#FFF9C4" stroke="#F9A825" stroke-width="2" rx="5"/>
        <text x="90" y="15" text-anchor="middle" font-size="12" fill="#E65100" font-weight="bold">JAVASCRIPT</text>
        <text x="5" y="30" font-size="9" font-family="monospace" fill="#333">try {</text>
        <text x="15" y="43" font-size="9" font-family="monospace" fill="#333">processData();</text>
        <text x="5" y="56" font-size="9" font-family="monospace" fill="#333">} finally {</text>
        <text x="15" y="69" font-size="9" font-family="monospace" fill="#333">cleanup(); }</text>
      </g>
    </g>
    
    <!-- Key Differences -->
    <g transform="translate(0, 360)">
      <text x="185" y="0" text-anchor="middle" font-size="14" fill="#C62828" font-weight="bold">Key Error Handling Differences:</text>
      
      <rect x="10" y="10" width="350" height="80" fill="#FFF8F8" stroke="#C62828" rx="5"/>
      
      <text x="20" y="30" font-size="11" fill="#E65100" font-weight="bold">Python:</text>
      <text x="80" y="30" font-size="10" fill="#666">Specific exception types, colon syntax</text>
      
      <text x="20" y="50" font-size="11" fill="#E65100" font-weight="bold">JavaScript:</text>
      <text x="80" y="50" font-size="10" fill="#666">Generic Error object, optional finally</text>
      
      <text x="20" y="70" font-size="11" fill="#4A148C" font-weight="bold">C#:</text>
      <text x="80" y="70" font-size="10" fill="#666">Strongly typed exceptions, multiple catch blocks</text>
    </g>
  </g>
  
  <!-- Powers -->
  <rect x="25" y="500" width="350" height="50" rx="8" fill="#FFF8F8" stroke="#F44336" stroke-width="2"/>
  <text x="200" y="520" text-anchor="middle" font-size="18" fill="#C62828" font-weight="bold">Graceful Error Recovery</text>
  <text x="200" y="535" text-anchor="middle" font-size="14" fill="#666">Prevents crashes • User-friendly errors • Resource cleanup</text>
  
  <!-- Real World Applications -->
  <rect x="25" y="560" width="350" height="20" rx="8" fill="#FFEBEE" stroke="#F44336" stroke-width="2"/>
  <text x="200" y="575" text-anchor="middle" font-size="13" fill="#666">API calls • File operations • User input validation • Network requests</text>
</svg>